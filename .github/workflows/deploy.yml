name: deploy
on:
  push:
    branches:
      - pipeline-test
env:
  REPO_URL: "https://github.com/Stijnc/AzureEats-Website"
  TF_VAR_resource_group_name: "rg-tfazure2020"
  TF_VAR_owner: "stijnc"
  TF_VAR_project: "tfazure2020"
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

jobs:
  platform-deploy:
    name: platform deployment
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: infrastructure/tf
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.26

      - name: terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: terraform init
        id: init
        run: terraform init -backend-config="env/backend.tfvars"

      - name: terraform validate
        id: validate
        run: terraform validate -no-color

      - name: terraform plan
        id: plan
        run: terraform plan -no-color

      - name: terraform apply
        id: apply
        run: terraform apply -auto-approve -no-color

        #Needs help
      - name: terraform output
        id: out
        run: |
          res=$(terraform output -json)
          echo "::set-output name=tf_out::$res"
        continue-on-error: true

      - name: output test
        id: outtest
        run: |
         echo ${{ steps.out.outputs.stdout }}
         echo "-----"
         echo "${{ GITHUB_REF }}"
         echo "-----"
         echo "${{ GITHUB_REF#refs/heads/ }}"
         echo "----"
         echo "${{ github.actor }}"
         echo "" 
        continue-on-error: true
